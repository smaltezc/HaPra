$date
  Thu Nov 11 19:17:31 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 3 ! abc[2:0] $end
$var reg 3 " y[2:0] $end
$scope module func41 $end
$var reg 3 # abc[2:0] $end
$var reg 3 $ y[2:0] $end
$var reg 2 % ab[1:0] $end
$var reg 3 & c[2:0] $end
$scope module mux_result $end
$var reg 3 ' i1[2:0] $end
$var reg 3 ( i2[2:0] $end
$var reg 3 ) i3[2:0] $end
$var reg 3 * i4[2:0] $end
$var reg 2 + sel[1:0] $end
$var reg 3 , y[2:0] $end
$var reg 2 - not_sel[1:0] $end
$var reg 3 . and_out1[2:0] $end
$var reg 3 / and_out2[2:0] $end
$var reg 3 0 and_out3[2:0] $end
$var reg 3 1 and_out4[2:0] $end
$var reg 3 2 or_out[2:0] $end
$scope module not_output1 $end
$var reg 1 3 input1 $end
$var reg 1 4 not_result $end
$var reg 1 5 not_gate $end
$upscope $end
$scope module not_output2 $end
$var reg 1 6 input1 $end
$var reg 1 7 not_result $end
$var reg 1 8 not_gate $end
$upscope $end
$scope module and_gate_assignment(0) $end
$scope module and_result1 $end
$var reg 1 9 input1 $end
$var reg 1 : input2 $end
$var reg 1 ; input3 $end
$var reg 1 < and_result $end
$var reg 1 = and_gate $end
$upscope $end
$scope module and_result2 $end
$var reg 1 > input1 $end
$var reg 1 ? input2 $end
$var reg 1 @ input3 $end
$var reg 1 A and_result $end
$var reg 1 B and_gate $end
$upscope $end
$scope module and_result3 $end
$var reg 1 C input1 $end
$var reg 1 D input2 $end
$var reg 1 E input3 $end
$var reg 1 F and_result $end
$var reg 1 G and_gate $end
$upscope $end
$scope module and_result4 $end
$var reg 1 H input1 $end
$var reg 1 I input2 $end
$var reg 1 J input3 $end
$var reg 1 K and_result $end
$var reg 1 L and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_result1 $end
$var reg 1 M input1 $end
$var reg 1 N input2 $end
$var reg 1 O input3 $end
$var reg 1 P and_result $end
$var reg 1 Q and_gate $end
$upscope $end
$scope module and_result2 $end
$var reg 1 R input1 $end
$var reg 1 S input2 $end
$var reg 1 T input3 $end
$var reg 1 U and_result $end
$var reg 1 V and_gate $end
$upscope $end
$scope module and_result3 $end
$var reg 1 W input1 $end
$var reg 1 X input2 $end
$var reg 1 Y input3 $end
$var reg 1 Z and_result $end
$var reg 1 [ and_gate $end
$upscope $end
$scope module and_result4 $end
$var reg 1 \ input1 $end
$var reg 1 ] input2 $end
$var reg 1 ^ input3 $end
$var reg 1 _ and_result $end
$var reg 1 ` and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_result1 $end
$var reg 1 a input1 $end
$var reg 1 b input2 $end
$var reg 1 c input3 $end
$var reg 1 d and_result $end
$var reg 1 e and_gate $end
$upscope $end
$scope module and_result2 $end
$var reg 1 f input1 $end
$var reg 1 g input2 $end
$var reg 1 h input3 $end
$var reg 1 i and_result $end
$var reg 1 j and_gate $end
$upscope $end
$scope module and_result3 $end
$var reg 1 k input1 $end
$var reg 1 l input2 $end
$var reg 1 m input3 $end
$var reg 1 n and_result $end
$var reg 1 o and_gate $end
$upscope $end
$scope module and_result4 $end
$var reg 1 p input1 $end
$var reg 1 q input2 $end
$var reg 1 r input3 $end
$var reg 1 s and_result $end
$var reg 1 t and_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_result1 $end
$var reg 1 u input1 $end
$var reg 1 v input2 $end
$var reg 1 w input3 $end
$var reg 1 x input4 $end
$var reg 1 y or_result $end
$var reg 1 z or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_result1 $end
$var reg 1 { input1 $end
$var reg 1 | input2 $end
$var reg 1 } input3 $end
$var reg 1 !" input4 $end
$var reg 1 "" or_result $end
$var reg 1 #" or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_result1 $end
$var reg 1 $" input1 $end
$var reg 1 %" input2 $end
$var reg 1 &" input3 $end
$var reg 1 '" input4 $end
$var reg 1 (" or_result $end
$var reg 1 )" or_gate $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b000 !
b000 "
b000 #
b000 $
b00 %
bUUU &
b000 '
b000 (
bUUU )
b000 *
b00 +
b000 ,
b11 -
b000 .
b000 /
b000 0
b000 1
b000 2
03
14
15
06
17
18
09
1:
1;
0<
0=
0>
0?
1@
0A
0B
UC
1D
0E
0F
0G
0H
0I
0J
0K
0L
0M
1N
1O
0P
0Q
0R
0S
1T
0U
0V
UW
1X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
1b
1c
0d
0e
0f
0g
1h
0i
0j
Uk
1l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
#10000000
b111 !
b111 "
b111 #
b111 $
b11 %
b111 *
b11 +
b111 ,
b00 -
b000 0
b111 1
b111 2
13
04
05
16
07
08
0:
0;
1?
0@
0D
1E
0F
0G
1H
1I
1J
1K
1L
0N
0O
1S
0T
0X
1Y
0Z
0[
1\
1]
1^
1_
1`
0b
0c
1g
0h
0l
1m
0n
0o
1p
1q
1r
1s
1t
0w
1x
1y
1z
0}
1!"
1""
1#"
0&"
1'"
1("
1)"
#20000000
b110 !
b110 "
b110 #
b110 $
b110 *
b110 ,
b110 1
b110 2
0H
0K
0L
0x
0y
0z
#30000000
b101 !
b001 "
b101 #
b001 $
b10 %
b001 &
b001 )
b101 *
b10 +
b001 ,
b01 -
b001 0
b000 1
b001 2
03
14
15
1:
0?
1C
1D
1F
1G
1H
0I
0K
0L
1N
0S
0W
1X
0\
0]
0_
0`
1b
0g
0k
1l
0q
0s
0t
1w
0x
1y
1z
0!"
0""
0#"
0'"
0("
0)"
#40000000
