$date
  Tue Nov 16 01:03:20 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 1 # cin $end
$var reg 4 $ s[3:0] $end
$var reg 1 % cout $end
$scope module uut $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( cin $end
$var reg 1 ) cout $end
$var reg 4 * sum[3:0] $end
$var reg 4 + coco[3:0] $end
$var reg 4 , pout[3:0] $end
$var reg 4 - gout[3:0] $end
$var reg 1 . pol $end
$var reg 1 / gol $end
$scope module pfa1 $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 cin $end
$var reg 1 3 g $end
$var reg 1 4 p $end
$var reg 1 5 sum $end
$upscope $end
$scope module pfa2 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 cin $end
$var reg 1 9 g $end
$var reg 1 : p $end
$var reg 1 ; sum $end
$upscope $end
$scope module pfa3 $end
$var reg 1 < a $end
$var reg 1 = b $end
$var reg 1 > cin $end
$var reg 1 ? g $end
$var reg 1 @ p $end
$var reg 1 A sum $end
$upscope $end
$scope module pfa4 $end
$var reg 1 B a $end
$var reg 1 C b $end
$var reg 1 D cin $end
$var reg 1 E g $end
$var reg 1 F p $end
$var reg 1 G sum $end
$upscope $end
$scope module uut $end
$var reg 4 H gin[3:0] $end
$var reg 4 I pin[3:0] $end
$var reg 1 J cin $end
$var reg 4 K cout[3:0] $end
$var reg 1 L pout $end
$var reg 1 M gout $end
$var reg 4 N c[3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b1101 !
b1011 "
0#
b1000 $
1%
b1101 &
b1011 '
0(
1)
b1000 *
b1111 +
b1111 ,
b1001 -
1.
1/
10
11
02
13
14
05
06
17
18
09
1:
0;
1<
0=
1>
0?
1@
0A
1B
1C
1D
1E
1F
1G
b1001 H
b1111 I
0J
b1111 K
1L
1M
b1111 N
#10000000
b1100 !
b0111 $
b1100 &
b0111 *
b1000 +
b1000 -
00
03
15
08
1;
0>
1A
0D
0G
b1000 H
b1000 K
b1000 N
