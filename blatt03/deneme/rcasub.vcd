$date
  Fri Nov 05 14:05:04 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 8 # bneg[7:0] $end
$var reg 8 $ sum[7:0] $end
$var reg 1 % cin $end
$var reg 1 & cout $end
$var reg 1 ' decider $end
$scope module u0 $end
$upscope $end
$scope module u1 $end
$var reg 8 ( a[7:0] $end
$var reg 8 ) b[7:0] $end
$var reg 1 * cin $end
$var reg 8 + sum[7:0] $end
$var reg 1 , cout $end
$var reg 1 - wire_1 $end
$var reg 1 . wire_2 $end
$var reg 1 / wire_3 $end
$var reg 1 0 wire_4 $end
$var reg 1 1 wire_5 $end
$var reg 1 2 wire_6 $end
$var reg 1 3 wire_7 $end
$var reg 1 4 wire_8 $end
$scope module add0 $end
$var reg 1 5 a $end
$var reg 1 6 b $end
$var reg 1 7 cin $end
$var reg 1 8 sum $end
$var reg 1 9 cout $end
$var reg 1 : wire_1 $end
$var reg 1 ; wire_2 $end
$var reg 1 < wire_3 $end
$upscope $end
$scope module add1 $end
$var reg 1 = a $end
$var reg 1 > b $end
$var reg 1 ? cin $end
$var reg 1 @ sum $end
$var reg 1 A cout $end
$var reg 1 B wire_1 $end
$var reg 1 C wire_2 $end
$var reg 1 D wire_3 $end
$upscope $end
$scope module add2 $end
$var reg 1 E a $end
$var reg 1 F b $end
$var reg 1 G cin $end
$var reg 1 H sum $end
$var reg 1 I cout $end
$var reg 1 J wire_1 $end
$var reg 1 K wire_2 $end
$var reg 1 L wire_3 $end
$upscope $end
$scope module add3 $end
$var reg 1 M a $end
$var reg 1 N b $end
$var reg 1 O cin $end
$var reg 1 P sum $end
$var reg 1 Q cout $end
$var reg 1 R wire_1 $end
$var reg 1 S wire_2 $end
$var reg 1 T wire_3 $end
$upscope $end
$scope module add4 $end
$var reg 1 U a $end
$var reg 1 V b $end
$var reg 1 W cin $end
$var reg 1 X sum $end
$var reg 1 Y cout $end
$var reg 1 Z wire_1 $end
$var reg 1 [ wire_2 $end
$var reg 1 \ wire_3 $end
$upscope $end
$scope module add5 $end
$var reg 1 ] a $end
$var reg 1 ^ b $end
$var reg 1 _ cin $end
$var reg 1 ` sum $end
$var reg 1 a cout $end
$var reg 1 b wire_1 $end
$var reg 1 c wire_2 $end
$var reg 1 d wire_3 $end
$upscope $end
$scope module add6 $end
$var reg 1 e a $end
$var reg 1 f b $end
$var reg 1 g cin $end
$var reg 1 h sum $end
$var reg 1 i cout $end
$var reg 1 j wire_1 $end
$var reg 1 k wire_2 $end
$var reg 1 l wire_3 $end
$upscope $end
$scope module add7 $end
$var reg 1 m a $end
$var reg 1 n b $end
$var reg 1 o cin $end
$var reg 1 p sum $end
$var reg 1 q cout $end
$var reg 1 r wire_1 $end
$var reg 1 s wire_2 $end
$var reg 1 t wire_3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000010 !
b00000001 "
bUUUUUUUU #
bUUUUUUUU $
0%
U&
0'
b00000010 (
bUUUUUUUU )
0*
bUUUUUUUU +
U,
0-
U.
U/
U0
U1
U2
U3
U4
05
U6
07
U8
09
U:
0;
0<
1=
U>
0?
U@
UA
UB
0C
UD
0E
UF
UG
UH
UI
UJ
UK
0L
0M
UN
UO
UP
UQ
UR
US
0T
0U
UV
UW
UX
UY
UZ
U[
0\
0]
U^
U_
U`
Ua
Ub
Uc
0d
0e
Uf
Ug
Uh
Ui
Uj
Uk
0l
0m
Un
Uo
Up
Uq
Ur
Us
0t
#10000000
1'
#20000000
